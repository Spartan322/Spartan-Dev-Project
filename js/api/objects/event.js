// Generated by CoffeeScript 1.10.0
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SDP.GDT.__notUniqueEvent = function(id) {
  var item;
  item = {
    id: id
  };
  return !Checks.checkUniqueness(item, 'id', DecisionNotifications.modNotifications);
};

SDP.GDT.Event = (function() {
  function Event(id, date, isRandomEvent, ignoreLenMod) {
    var e, ref, ref1;
    this.date = date;
    this.isRandomEvent = isRandomEvent;
    this.ignoreLenMod = ignoreLenMod;
    this.add = bind(this.add, this);
    this.toInput = bind(this.toInput, this);
    if (id == null) {
      throw new TypeError("id can't be undefined");
    }
    if (id instanceof Event) {
      e = id;
      id = e.getId();
      this.getId = function() {
        return id;
      };
      if (e.date != null) {
        this.date = new SDP.GDT.Date(e.date);
      }
      this.isRandomEvent = e.isRandomEvent;
      this.ignoreLenMod = e.ignoreLenMod;
      this.maxTriggers = e.maxTriggers;
      this.trigger = (ref = e.trigger) != null ? ref.bind(this) : void 0;
      this.complete = (ref1 = e.complete) != null ? ref1.bind(this) : void 0;
      this.getNotification = e.getNotification;
    } else if (id.id != null) {
      e = id;
      id = e.id;
      this.getId = function() {
        return id;
      };
      this.date = e.date;
      this.isRandomEvent = e.isRandomEvent;
      this.ignoreLenMod = e.ignoreGameLengthModifier;
      this.maxTriggers = e.maxTriggers;
      this.trigger = e.trigger;
      this.complete = e.complete;
      this.getNotification = e.notification == null ? e.getNotification : (function(company) {
        return e.notification;
      });
    } else {
      this.maxTriggers = 1;
      this.trigger = function(company) {
        return false;
      };
      this.complete = function(decision) {};
      this.getNotification = function(company) {
        return new SDP.GDT.Notification(this);
      };
      this.getId = function() {
        return id;
      };
    }
    this.getNotification.bind(this);
    while (SDP.GDT.__notUniqueEvent(id)) {
      id += '_';
    }
    this.getId = function() {
      return id;
    };
  }

  Event.prototype.toInput = function() {
    return {
      id: this.getId(),
      date: this.date(!(this.date instanceof SDP.GDT.Date) ? this.date.toString() : void 0),
      isRandomEvent: this.isRandomEvent,
      ignoreGameLengthModifier: this.ignoreLenMod,
      maxTriggers: this.maxTriggers,
      trigger: this.trigger,
      getNotification: this.getNotification,
      complete: this.complete
    };
  };

  Event.prototype.add = function() {
    return GDT.addEvent(this);
  };

  return Event;

})();
