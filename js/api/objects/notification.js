// Generated by CoffeeScript 1.10.0
(function() {
  var __notificationRep,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    slice = [].slice;

  __notificationRep = Notification;

  SDP.GDT.Notification = (function() {
    function Notification() {
      var args, event, id, obj;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      this.trigger = bind(this.trigger, this);
      this.addAsEvent = bind(this.addAsEvent, this);
      this.toInput = bind(this.toInput, this);
      this.removeOption = bind(this.removeOption, this);
      this.addOptions = bind(this.addOptions, this);
      this.addOption = bind(this.addOption, this);
      if (args.length === 1) {
        obj = args[0];
        if (obj instanceof __notificationRep) {
          this.header = obj.header;
          this.text = obj.text;
          this.buttonTxt = obj.buttonText;
          this.weeksUntilFire = obj.weeksUntilFire;
          this.image = obj.image;
          this.options = obj.options.slice();
          id = obj.sourceId;
        } else if (obj instanceof Notification) {
          this.header = obj.header;
          this.text = obj.text;
          this.buttonTxt = obj.buttonText;
          this.weeksUntilFire = obj.weeksUntilFire;
          this.image = obj.image;
          this.options = obj.options.slice();
          id = obj.getSourceId();
          event = obj.getEvent();
        }
      } else {
        if (args[0].constructor === String) {
          this.header = args[0];
          this.text = args[1];
          this.buttonText = args[2];
          this.weeksUntilFire = args[3];
          this.image = args[4];
          event = args[5];
        } else {
          event = args[0];
          this.header = args[1];
          this.text = args[2];
          this.buttonText = args[3];
          this.weeksUntilFire = args[4];
          this.image = args[5];
        }
        id = (SDP.GDT.Event != null) && event instanceof SDP.GDT.Event ? event.getId() : event.id != null ? event.id : 0;
        this.options = [];
      }
      this.sourceId = function() {
        return id;
      };
      if (event != null) {
        this.getEvent = (function() {
          return event;
        });
      }
    }

    Notification.prototype.addOption = function(text) {
      if (this.options.length < 3) {
        this.options.push(text.localize("decision action button"));
      }
      return this;
    };

    Notification.prototype.addOptions = function() {
      var index, txts;
      txts = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (txts.length + this.options.length < 3) {
        this.options.push(txts);
      } else {
        index = 0;
        while (this.options.length < 3) {
          this.options.push(txts[index++].localize("decision action button"));
        }
      }
      return this;
    };

    Notification.prototype.removeOption = function(index) {
      this.options.splice(index, 1);
      return this;
    };

    Notification.prototype.toInput = function() {
      return new Notification({
        header: this.header,
        text: this.text,
        buttonText: this.buttonText,
        weeksUntilFire: this.weeksUntilFire,
        image: this.image,
        options: this.options,
        sourceId: this.sourceId,
        event: this.getEvent()
      });
    };

    Notification.prototype.addAsEvent = function() {
      if (this.getEvent() != null) {
        return SDP.GDT.addEvent(this);
      }
    };

    Notification.prototype.trigger = function() {
      return SDP.GDT.triggerNotification(this);
    };

    return Notification;

  })();

}).call(this);
